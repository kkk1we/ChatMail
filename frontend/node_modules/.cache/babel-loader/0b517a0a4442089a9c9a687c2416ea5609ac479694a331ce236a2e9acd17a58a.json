{"ast":null,"code":"var _jsxFileName = \"D:\\\\MailChat\\\\ChatMail\\\\frontend\\\\src\\\\components\\\\Callback.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Callback({\n  onLogin\n}) {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const code = new URLSearchParams(window.location.search).get('code');\n    console.log(\"🔍 Code param:\", code);\n    const handleOAuthRedirect = async () => {\n      if (!code) {\n        console.error(\"Error: No code parameter in URL\");\n        navigate('/');\n        return;\n      }\n      try {\n        var _res$data, _res$data$tokens;\n        const res = await axios.get(`http://localhost:5000/api/oauth2callback?code=${code}`);\n        if ((_res$data = res.data) !== null && _res$data !== void 0 && (_res$data$tokens = _res$data.tokens) !== null && _res$data$tokens !== void 0 && _res$data$tokens.access_token) {\n          const accessToken = res.data.tokens.access_token;\n          console.log('✅ Access Token received:', accessToken);\n\n          // Save the access token in localStorage\n          localStorage.setItem('accessToken', accessToken);\n\n          // Call onLogin callback and navigate to the main page\n          onLogin({\n            accessToken\n          });\n          navigate('/');\n        } else {\n          console.error(\"Error: No access token received from server\");\n          localStorage.removeItem('accessToken'); // Clean up in case of failure\n          navigate('/'); // Redirect back to login\n        }\n      } catch (error) {\n        console.error(\"OAuth callback failed:\", error);\n        localStorage.removeItem('accessToken'); // Clean up invalid token\n        navigate('/'); // Redirect back to login\n      }\n    };\n    handleOAuthRedirect();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Logging you in...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n_s(Callback, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Callback;\nvar _c;\n$RefreshReg$(_c, \"Callback\");","map":{"version":3,"names":["useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Callback","onLogin","_s","navigate","code","URLSearchParams","window","location","search","get","console","log","handleOAuthRedirect","error","_res$data","_res$data$tokens","res","data","tokens","access_token","accessToken","localStorage","setItem","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MailChat/ChatMail/frontend/src/components/Callback.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Callback({ onLogin }) {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const code = new URLSearchParams(window.location.search).get('code');\r\n    console.log(\"🔍 Code param:\", code);\r\n\r\n    const handleOAuthRedirect = async () => {\r\n      if (!code) {\r\n        console.error(\"Error: No code parameter in URL\");\r\n        navigate('/');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/oauth2callback?code=${code}`);\r\n        \r\n        if (res.data?.tokens?.access_token) {\r\n          const accessToken = res.data.tokens.access_token;\r\n          console.log('✅ Access Token received:', accessToken);\r\n\r\n          // Save the access token in localStorage\r\n          localStorage.setItem('accessToken', accessToken);\r\n\r\n          // Call onLogin callback and navigate to the main page\r\n          onLogin({ accessToken });\r\n          navigate('/');\r\n        } else {\r\n          console.error(\"Error: No access token received from server\");\r\n          localStorage.removeItem('accessToken'); // Clean up in case of failure\r\n          navigate('/'); // Redirect back to login\r\n        }\r\n      } catch (error) {\r\n        console.error(\"OAuth callback failed:\", error);\r\n        localStorage.removeItem('accessToken'); // Clean up invalid token\r\n        navigate('/'); // Redirect back to login\r\n      }\r\n    };\r\n\r\n    handleOAuthRedirect();\r\n  }, [navigate]);\r\n\r\n  return <p>Logging you in...</p>;\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMS,IAAI,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,MAAM,CAAC;IACpEC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEP,IAAI,CAAC;IAEnC,MAAMQ,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI,CAACR,IAAI,EAAE;QACTM,OAAO,CAACG,KAAK,CAAC,iCAAiC,CAAC;QAChDV,QAAQ,CAAC,GAAG,CAAC;QACb;MACF;MAEA,IAAI;QAAA,IAAAW,SAAA,EAAAC,gBAAA;QACF,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACa,GAAG,CAAC,iDAAiDL,IAAI,EAAE,CAAC;QAEpF,KAAAU,SAAA,GAAIE,GAAG,CAACC,IAAI,cAAAH,SAAA,gBAAAC,gBAAA,GAARD,SAAA,CAAUI,MAAM,cAAAH,gBAAA,eAAhBA,gBAAA,CAAkBI,YAAY,EAAE;UAClC,MAAMC,WAAW,GAAGJ,GAAG,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY;UAChDT,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAES,WAAW,CAAC;;UAEpD;UACAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEF,WAAW,CAAC;;UAEhD;UACAnB,OAAO,CAAC;YAAEmB;UAAY,CAAC,CAAC;UACxBjB,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,MAAM;UACLO,OAAO,CAACG,KAAK,CAAC,6CAA6C,CAAC;UAC5DQ,YAAY,CAACE,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;UACxCpB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACjB;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CQ,YAAY,CAACE,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACxCpB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB;IACF,CAAC;IAEDS,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,oBAAOJ,OAAA;IAAAyB,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACjC;AAAC1B,EAAA,CA3CuBF,QAAQ;EAAA,QACbH,WAAW;AAAA;AAAAgC,EAAA,GADN7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}