{"ast":null,"code":"var _jsxFileName = \"D:\\\\MailChat\\\\ChatMail\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailList({\n  token\n}) {\n  _s();\n  const [threads, setThreads] = useState([]);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/emails', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setThreads(res.data);\n      } catch (error) {\n        var _error$response;\n        console.error('Email fetch failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    };\n    if (token) fetchEmails();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list\",\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: threads.length > 0 ? threads.map(thread => {\n      var _thread$messages;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-thread\",\n        style: {\n          border: '2px solid #ccc',\n          borderRadius: '10px',\n          padding: '15px',\n          marginBottom: '25px',\n          backgroundColor: '#fafafa',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '10px',\n            color: '#333'\n          },\n          children: [\"\\uD83D\\uDCEC \", thread.subject || '(no subject)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), (_thread$messages = thread.messages) === null || _thread$messages === void 0 ? void 0 : _thread$messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '10px 14px',\n            margin: '10px 0',\n            borderRadius: '8px',\n            backgroundColor: msg.isMe ? '#e1fbe1' : '#eaeaea',\n            borderLeft: msg.isMe ? '4px solid #4caf50' : '4px solid #888'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold',\n              marginBottom: '5px'\n            },\n            children: msg.from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              whiteSpace: 'pre-wrap',\n              marginBottom: '6px'\n            },\n            children: msg.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.85em',\n              color: '#666'\n            },\n            children: new Date(msg.date).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDCE8 Loading emails...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"sq9hmC9Ec1RKesUYep9W9DPjbrM=\");\n_c = EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","EmailList","token","_s","threads","setThreads","fetchEmails","res","get","headers","Authorization","data","error","_error$response","console","response","message","className","style","padding","fontFamily","children","length","map","thread","_thread$messages","border","borderRadius","marginBottom","backgroundColor","boxShadow","color","subject","fileName","_jsxFileName","lineNumber","columnNumber","messages","msg","i","margin","isMe","borderLeft","fontWeight","from","whiteSpace","body","fontSize","Date","date","toLocaleString","id","_c","$RefreshReg$"],"sources":["D:/MailChat/ChatMail/frontend/src/components/EmailList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function EmailList({ token }) {\r\n  const [threads, setThreads] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/emails', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setThreads(res.data);\r\n      } catch (error) {\r\n        console.error('Email fetch failed:', error.response?.data || error.message);\r\n      }\r\n    };\r\n\r\n    if (token) fetchEmails();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"email-list\" style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      {threads.length > 0 ? (\r\n        threads.map((thread) => (\r\n          <div\r\n            key={thread.id}\r\n            className=\"email-thread\"\r\n            style={{\r\n              border: '2px solid #ccc',\r\n              borderRadius: '10px',\r\n              padding: '15px',\r\n              marginBottom: '25px',\r\n              backgroundColor: '#fafafa',\r\n              boxShadow: '0 2px 6px rgba(0,0,0,0.05)',\r\n            }}\r\n          >\r\n            <h3 style={{ marginBottom: '10px', color: '#333' }}>\r\n              ðŸ“¬ {thread.subject || '(no subject)'}\r\n            </h3>\r\n\r\n            {thread.messages?.map((msg, i) => (\r\n              <div\r\n                key={i}\r\n                style={{\r\n                  padding: '10px 14px',\r\n                  margin: '10px 0',\r\n                  borderRadius: '8px',\r\n                  backgroundColor: msg.isMe ? '#e1fbe1' : '#eaeaea',\r\n                  borderLeft: msg.isMe ? '4px solid #4caf50' : '4px solid #888',\r\n                }}\r\n              >\r\n                <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>{msg.from}</div>\r\n                <div style={{ whiteSpace: 'pre-wrap', marginBottom: '6px' }}>{msg.body}</div>\r\n                <div style={{ fontSize: '0.85em', color: '#666' }}>\r\n                  {new Date(msg.date).toLocaleString()}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>ðŸ“¨ Loading emails...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}