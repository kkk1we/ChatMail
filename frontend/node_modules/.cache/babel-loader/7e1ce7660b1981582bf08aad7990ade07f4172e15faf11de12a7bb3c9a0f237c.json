{"ast":null,"code":"var _jsxFileName = \"D:\\\\MailChat\\\\ChatMail\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailList({\n  token\n}) {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [expandedThreadId, setExpandedThreadId] = useState(null);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/emails', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setThreads(res.data);\n      } catch (error) {\n        var _error$response;\n        console.error('Email fetch failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    };\n    if (token) fetchEmails();\n  }, [token]);\n  const toggleThread = id => {\n    setExpandedThreadId(expandedThreadId === id ? null : id);\n  };\n  const getInitials = from => {\n    const name = from.split('<')[0].trim();\n    return name.split(' ').map(word => word[0]).join('').slice(0, 2).toUpperCase();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list\",\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: threads.length > 0 ? threads.map(thread => {\n      var _thread$messages;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-thread\",\n        style: {\n          border: '2px solid #ccc',\n          borderRadius: '10px',\n          padding: '15px',\n          marginBottom: '25px',\n          backgroundColor: '#fafafa',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            cursor: 'pointer',\n            color: '#333'\n          },\n          onClick: () => toggleThread(thread.id),\n          children: [\"\\uD83D\\uDCEC \", thread.subject || '(no subject)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), expandedThreadId === thread.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: '400px',\n            overflowY: 'auto',\n            paddingRight: '10px'\n          },\n          children: (_thread$messages = thread.messages) === null || _thread$messages === void 0 ? void 0 : _thread$messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'flex-start',\n              gap: '10px',\n              padding: '10px 14px',\n              margin: '10px 0',\n              borderRadius: '8px',\n              backgroundColor: msg.isMe ? '#e1fbe1' : '#eaeaea',\n              borderLeft: msg.isMe ? '4px solid #4caf50' : '4px solid #888'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#888',\n                color: '#fff',\n                borderRadius: '50%',\n                width: '36px',\n                height: '36px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontWeight: 'bold',\n                fontSize: '0.9em'\n              },\n              children: getInitials(msg.from)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginBottom: '5px'\n                },\n                children: msg.from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  marginBottom: '6px'\n                },\n                children: msg.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.85em',\n                  color: '#666'\n                },\n                children: new Date(msg.date).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDCE8 Loading emails...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"00YzFwxZzHDEK2DwqG4S31XyqyU=\");\n_c = EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","EmailList","token","_s","threads","setThreads","expandedThreadId","setExpandedThreadId","fetchEmails","res","get","headers","Authorization","data","error","_error$response","console","response","message","toggleThread","id","getInitials","from","name","split","trim","map","word","join","slice","toUpperCase","className","style","padding","fontFamily","children","length","thread","_thread$messages","border","borderRadius","marginBottom","backgroundColor","boxShadow","cursor","color","onClick","subject","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","paddingRight","messages","msg","i","display","alignItems","gap","margin","isMe","borderLeft","width","height","justifyContent","fontWeight","fontSize","flex","whiteSpace","body","Date","date","toLocaleString","_c","$RefreshReg$"],"sources":["D:/MailChat/ChatMail/frontend/src/components/EmailList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function EmailList({ token }) {\r\n  const [threads, setThreads] = useState([]);\r\n  const [expandedThreadId, setExpandedThreadId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/emails', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setThreads(res.data);\r\n      } catch (error) {\r\n        console.error('Email fetch failed:', error.response?.data || error.message);\r\n      }\r\n    };\r\n\r\n    if (token) fetchEmails();\r\n  }, [token]);\r\n\r\n  const toggleThread = (id) => {\r\n    setExpandedThreadId(expandedThreadId === id ? null : id);\r\n  };\r\n\r\n  const getInitials = (from) => {\r\n    const name = from.split('<')[0].trim();\r\n    return name.split(' ').map(word => word[0]).join('').slice(0, 2).toUpperCase();\r\n  };\r\n\r\n  return (\r\n    <div className=\"email-list\" style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      {threads.length > 0 ? (\r\n        threads.map((thread) => (\r\n          <div\r\n            key={thread.id}\r\n            className=\"email-thread\"\r\n            style={{\r\n              border: '2px solid #ccc',\r\n              borderRadius: '10px',\r\n              padding: '15px',\r\n              marginBottom: '25px',\r\n              backgroundColor: '#fafafa',\r\n              boxShadow: '0 2px 6px rgba(0,0,0,0.05)',\r\n            }}\r\n          >\r\n            <h3\r\n              style={{ cursor: 'pointer', color: '#333' }}\r\n              onClick={() => toggleThread(thread.id)}\r\n            >\r\n              ðŸ“¬ {thread.subject || '(no subject)'}\r\n            </h3>\r\n\r\n            {expandedThreadId === thread.id && (\r\n              <div style={{ maxHeight: '400px', overflowY: 'auto', paddingRight: '10px' }}>\r\n                {thread.messages?.map((msg, i) => (\r\n                  <div\r\n                    key={i}\r\n                    style={{\r\n                      display: 'flex',\r\n                      alignItems: 'flex-start',\r\n                      gap: '10px',\r\n                      padding: '10px 14px',\r\n                      margin: '10px 0',\r\n                      borderRadius: '8px',\r\n                      backgroundColor: msg.isMe ? '#e1fbe1' : '#eaeaea',\r\n                      borderLeft: msg.isMe ? '4px solid #4caf50' : '4px solid #888',\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: '#888',\r\n                        color: '#fff',\r\n                        borderRadius: '50%',\r\n                        width: '36px',\r\n                        height: '36px',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '0.9em',\r\n                      }}\r\n                    >\r\n                      {getInitials(msg.from)}\r\n                    </div>\r\n                    <div style={{ flex: 1 }}>\r\n                      <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>{msg.from}</div>\r\n                      <div style={{ whiteSpace: 'pre-wrap', marginBottom: '6px' }}>{msg.body}</div>\r\n                      <div style={{ fontSize: '0.85em', color: '#666' }}>\r\n                        {new Date(msg.date).toLocaleString()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>ðŸ“¨ Loading emails...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}