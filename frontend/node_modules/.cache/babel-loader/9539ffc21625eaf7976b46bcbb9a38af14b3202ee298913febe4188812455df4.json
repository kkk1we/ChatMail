{"ast":null,"code":"var _jsxFileName = \"D:\\\\MailChat\\\\ChatMail\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EmailEditor from './EmailEditor';\nimport './EmailList.css';\n\n// Helper functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cleanBody = html => {\n  if (!html || typeof html !== 'string') return '';\n  return html.replace(/<style[^>]*>[\\s\\S]*?<\\/style>/gi, '').replace(/<script[^>]*>[\\s\\S]*?<\\/script>/gi, '').replace(/<\\/?(html|head|body|meta|title|link)[^>]*>/gi, '').replace(/<div[^>]+class=\"gmail_quote\"[^>]*>[\\s\\S]*$/gi, '').replace(/<blockquote[^>]*>[\\s\\S]*?<\\/blockquote>/gi, '').replace(/&nbsp;/g, ' ').replace(/\\s{2,}/g, ' ').trim();\n};\nconst getDateLabel = dateStr => {\n  const date = new Date(dateStr);\n  const today = new Date();\n  const yesterday = new Date();\n  yesterday.setDate(today.getDate() - 1);\n  if (date.toDateString() === today.toDateString()) return 'Today';\n  if (date.toDateString() === yesterday.toDateString()) return 'Yesterday';\n  return date.toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n  });\n};\nconst getInitials = from => {\n  const name = from.split('<')[0].trim();\n  return name.split(' ').map(word => word[0]).join('').slice(0, 2).toUpperCase();\n};\n\n// Extract primary email from a sender string (handles formats like \"Name <email@example.com>\")\nconst extractEmail = from => {\n  const emailMatch = from.match(/<([^>]+)>/) || from.match(/([^\\s]+@[^\\s]+)/);\n  return emailMatch ? emailMatch[1] : from;\n};\n\n// Get a preview of the thread content (first few words)\nconst getThreadPreview = thread => {\n  if (!thread.messages || thread.messages.length === 0) return '';\n  const lastMessage = thread.messages[thread.messages.length - 1];\n  const cleanedBody = cleanBody(lastMessage.body);\n  const textOnly = cleanedBody.replace(/<[^>]+>/g, ' ').trim();\n  return textOnly.length > 60 ? textOnly.substring(0, 60) + '...' : textOnly;\n};\nexport default function EmailList({\n  token\n}) {\n  _s();\n  const [profile, setProfile] = useState(null);\n  const [threads, setThreads] = useState([]);\n  const [search, setSearch] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [followEmails, setFollowEmails] = useState([]);\n  const [emailInput, setEmailInput] = useState('');\n  const [viewMode, setViewMode] = useState('grid');\n\n  // Thread-specific state\n  const [expandedThreads, setExpandedThreads] = useState({});\n  const [threadSearches, setThreadSearches] = useState({});\n  const [pendingReplies, setPendingReplies] = useState({});\n  const [attachments, setAttachments] = useState({});\n  const [showPreviews, setShowPreviews] = useState({});\n  const [editorContents, setEditorContents] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Fetch profile data\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/profile', {\n          withCredentials: true\n        });\n        setProfile(res.data);\n        setUserEmail(res.data.email);\n      } catch (err) {\n        console.error('❌ Failed to load profile:', err.message);\n      }\n    };\n    fetchProfile();\n  }, []);\n  const fetchFollowedEmails = async (emailsToFetch = followEmails) => {\n    try {\n      // First ensure we have the latest list of followed emails\n      const res = await axios.get('http://localhost:5000/api/followed-emails', {\n        withCredentials: true\n      });\n      if (res.data && Array.isArray(res.data.followedEmails)) {\n        setFollowEmails(res.data.followedEmails);\n      }\n\n      // Then fetch the actual email content for these addresses\n      setIsLoading(true); // Add this state variable to track loading state\n\n      // Fetch email threads for the followed emails\n      const threadsRes = await axios.post('http://localhost:5000/api/email-threads', {\n        emails: emailsToFetch\n      }, {\n        withCredentials: true\n      });\n      if (threadsRes.data && threadsRes.data.threads) {\n        // Group emails by sender\n        const groups = {};\n        threadsRes.data.threads.forEach(thread => {\n          // Assuming the first message's from field contains the sender\n          const sender = thread.messages[0].from;\n          if (!groups[sender]) {\n            groups[sender] = [];\n          }\n          groups[sender].push(thread);\n        });\n        setEmailGroups(groups);\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch emails:', error);\n      setIsLoading(false);\n    }\n  };\n  // Fetch emails for followed addresses\n  useEffect(() => {\n    fetchFollowedEmails();\n  }, []);\n\n  // Update handleAddEmail to save to database\n  const handleAddEmail = () => {\n    if (emailInput && !followEmails.includes(emailInput)) {\n      const newFollowEmails = [...followEmails, emailInput];\n      setFollowEmails(newFollowEmails);\n      setEmailInput('');\n\n      // Save to backend\n      axios.post('http://localhost:5000/api/follow-email', {\n        email: emailInput\n      }, {\n        withCredentials: true\n      }).then(() => {\n        // Fetch emails for the newly added email address\n        fetchFollowedEmails(newFollowEmails);\n      }).catch(error => {\n        console.error('Failed to add email to follow:', error);\n      });\n    }\n  };\n\n  // Update the remove function as well\n  const removeFollowedEmail = async indexToRemove => {\n    try {\n      const updatedEmails = followEmails.filter((_, i) => i !== indexToRemove);\n      await axios.post('http://localhost:5000/api/followed-emails', {\n        emails: updatedEmails\n      }, {\n        withCredentials: true\n      });\n      setFollowEmails(updatedEmails);\n    } catch (error) {\n      console.error('Failed to remove followed email:', error);\n      alert('Failed to remove email from follow list');\n    }\n  };\n\n  // Toggle thread expansion\n  const toggleThread = threadId => {\n    setExpandedThreads(prev => ({\n      ...prev,\n      [threadId]: !prev[threadId]\n    }));\n  };\n\n  // Update thread search\n  const updateThreadSearch = (threadId, value) => {\n    setThreadSearches(prev => ({\n      ...prev,\n      [threadId]: value\n    }));\n  };\n\n  // Add/remove attachments\n  const updateAttachments = (threadId, newAttachments) => {\n    setAttachments(prev => ({\n      ...prev,\n      [threadId]: newAttachments\n    }));\n  };\n\n  // Set pending reply metadata\n  const setPendingReplyMeta = (threadId, meta) => {\n    setPendingReplies(prev => ({\n      ...prev,\n      [threadId]: meta\n    }));\n    setShowPreviews(prev => ({\n      ...prev,\n      [threadId]: true\n    }));\n  };\n\n  // Toggle preview visibility\n  const togglePreview = (threadId, value) => {\n    setShowPreviews(prev => ({\n      ...prev,\n      [threadId]: value\n    }));\n  };\n\n  // Update editor content\n  const updateEditorContent = (threadId, content) => {\n    setEditorContents(prev => ({\n      ...prev,\n      [threadId]: content\n    }));\n  };\n\n  // Send or save reply\n  // Send or save reply\n  // Update the sendReply function in your EmailList.jsx\n  const sendReply = async (threadId, to, subject, isDraft) => {\n    const html = editorContents[threadId] || '';\n    if (!html) return;\n    try {\n      // Format the recipient correctly if needed\n      const recipient = to.includes('<') ? to : `<${to}>`;\n      await axios.post('http://localhost:5000/api/reply', {\n        // Skip threadId if it's not a valid Gmail thread ID\n        // threadId: threadId, \n        to: recipient,\n        subject: `Re: ${subject}`,\n        message: html,\n        draft: isDraft\n      }, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add reply to local thread\n      setThreads(prev => prev.map(thread => {\n        if (thread.id !== threadId) return thread;\n        return {\n          ...thread,\n          messages: [...thread.messages, {\n            id: `local-${Date.now()}`,\n            from: userEmail,\n            subject,\n            date: new Date().toISOString(),\n            body: html\n          }]\n        };\n      }));\n\n      // Show success message\n      alert(isDraft ? '✅ Draft saved!' : '✅ Reply sent!');\n\n      // Reset editor content\n      updateEditorContent(threadId, '');\n\n      // Reset preview state\n      togglePreview(threadId, false);\n\n      // Clear attachments\n      updateAttachments(threadId, []);\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error('❌ Reply failed:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      alert(`Failed to send reply: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message}`);\n    }\n  };\n\n  // Group threads by sender email\n  const groupThreadsBySender = () => {\n    const emailGroups = {};\n    threads.forEach(thread => {\n      if (!thread.messages || thread.messages.length === 0) return;\n\n      // Get the sender of the first message\n      const firstMessage = thread.messages[0];\n      const sender = extractEmail(firstMessage.from);\n      if (!emailGroups[sender]) {\n        emailGroups[sender] = [];\n      }\n      emailGroups[sender].push(thread);\n    });\n    return emailGroups;\n  };\n\n  // Filter threads based on search\n  const filteredThreads = threads.filter(thread => {\n    var _thread$subject, _thread$messages;\n    return ((_thread$subject = thread.subject) === null || _thread$subject === void 0 ? void 0 : _thread$subject.toLowerCase().includes(search.toLowerCase())) || ((_thread$messages = thread.messages) === null || _thread$messages === void 0 ? void 0 : _thread$messages.some(msg => {\n      var _msg$from, _msg$body;\n      return ((_msg$from = msg.from) === null || _msg$from === void 0 ? void 0 : _msg$from.toLowerCase().includes(search.toLowerCase())) || ((_msg$body = msg.body) === null || _msg$body === void 0 ? void 0 : _msg$body.toLowerCase().includes(search.toLowerCase()));\n    }));\n  });\n\n  // Group threads by sender\n  const emailGroups = groupThreadsBySender();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list\",\n    children: [profile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.picture,\n        alt: \"avatar\",\n        className: \"profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: profile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-email\",\n          children: profile.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uD83D\\uDD0D Search all threads...\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add email to follow...\",\n          value: emailInput,\n          onChange: e => setEmailInput(e.target.value),\n          className: \"email-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddEmail,\n          className: \"add-button\",\n          children: \"Add Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"follow-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"follow-count\",\n          children: followEmails.length > 0 ? `Following ${followEmails.length} email${followEmails.length > 1 ? 's' : ''}` : 'No emails followed yet'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('grid'),\n            className: `view-button ${viewMode === 'grid' ? 'active' : ''}`,\n            children: \"Grid View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('list'),\n            className: `view-button ${viewMode === 'list' ? 'active' : ''}`,\n            children: \"List View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-chips\",\n        children: followEmails.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-chip\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeFollowedEmail(index),\n            className: \"remove-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), Object.keys(emailGroups).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-groups\",\n      children: Object.entries(emailGroups).map(([sender, senderThreads]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sender-email\",\n          children: sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: viewMode === 'grid' ? 'grid-container' : 'list-container',\n          children: senderThreads.map(thread => {\n            const isExpanded = expandedThreads[thread.id] || false;\n            const threadSearch = threadSearches[thread.id] || '';\n            const threadAttachments = attachments[thread.id] || [];\n            const filteredMsgs = thread.messages.filter(msg => msg.from.toLowerCase().includes(threadSearch.toLowerCase()) || msg.body.toLowerCase().includes(threadSearch.toLowerCase()));\n            let lastDateLabel = '';\n            const threadPreview = getThreadPreview(thread);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `email-thread ${isExpanded ? 'expanded' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"thread-header\",\n                onClick: () => toggleThread(thread.id),\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"thread-title\",\n                  children: [\"\\uD83D\\uDCEC \", thread.subject || '(no subject)']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"thread-preview\",\n                  children: threadPreview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `thread-toggle ${isExpanded ? 'expanded' : ''}`,\n                  children: \"\\u25BC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"thread-info\",\n                children: [thread.messages.length, \" message\", thread.messages.length !== 1 ? 's' : '', \" \\u2022 Last activity: \", new Date(thread.messages[thread.messages.length - 1].date).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 23\n              }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"thread-expanded\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Search in this thread...\",\n                  value: threadSearch,\n                  onChange: e => updateThreadSearch(thread.id, e.target.value),\n                  className: \"thread-search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"messages-container\",\n                  children: filteredMsgs.map((msg, i) => {\n                    const dateLabel = getDateLabel(msg.date);\n                    const showDateLabel = dateLabel !== lastDateLabel;\n                    lastDateLabel = dateLabel;\n                    const isMe = msg.from.includes(userEmail);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-wrapper\",\n                      children: [showDateLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"date-label\",\n                        children: [\"\\u2500\\u2500 \", dateLabel, \" \\u2500\\u2500\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `message ${isMe ? 'sent' : 'received'}`,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `avatar ${isMe ? 'me' : ''}`,\n                          children: isMe ? 'You' : getInitials(msg.from)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 459,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"message-content\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"message-sender\",\n                            children: isMe ? 'You' : msg.from\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 463,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"message-body\",\n                            dangerouslySetInnerHTML: {\n                              __html: cleanBody(msg.body)\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 464,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"message-time\",\n                            children: new Date(msg.date).toLocaleString()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 466,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 462,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 35\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reply-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"reply-title\",\n                    children: \"Reply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(EmailEditor, {\n                    threadId: thread.id,\n                    value: editorContents[thread.id] || '',\n                    onChange: html => updateEditorContent(thread.id, html)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"attachment-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"attachment-label\",\n                      children: [\"\\uD83D\\uDCCE Attach files:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        multiple: true,\n                        onChange: e => {\n                          const newFiles = Array.from(e.target.files || []);\n                          updateAttachments(thread.id, [...threadAttachments, ...newFiles]);\n                        },\n                        className: \"file-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 486,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"attachment-list\",\n                      children: threadAttachments.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"attachment-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"file-icon\",\n                          children: \"\\uD83D\\uDCC4\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 499,\n                          columnNumber: 37\n                        }, this), file.name, /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => updateAttachments(thread.id, threadAttachments.filter((_, i) => i !== index)),\n                          className: \"remove-button\",\n                          children: \"\\xD7\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 501,\n                          columnNumber: 37\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"button-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => sendReply(thread.id, thread.messages[0].from, thread.subject, false),\n                      className: \"action-button send\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"button-icon\",\n                        children: \"\\u2709\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 33\n                      }, this), \"Send Reply\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        setPendingReplyMeta(thread.id, {\n                          threadId: thread.id,\n                          to: thread.messages[0].from,\n                          subject: thread.subject\n                        });\n                      },\n                      className: \"action-button preview\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"button-icon\",\n                        children: \"\\uD83D\\uDC41\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 530,\n                        columnNumber: 33\n                      }, this), \"Preview\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => sendReply(thread.id, thread.messages[0].from, thread.subject, true),\n                      className: \"action-button draft\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"button-icon\",\n                        children: \"\\uD83D\\uDCBE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 537,\n                        columnNumber: 33\n                      }, this), \"Save Draft\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 25\n              }, this), showPreviews[thread.id] && pendingReplies[thread.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-modal\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"preview-title\",\n                    children: \"\\uD83D\\uDCE8 Preview Your Reply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"preview-meta-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"To:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 551,\n                        columnNumber: 66\n                      }, this), \" \", pendingReplies[thread.id].to]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"preview-meta-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Subject:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 66\n                      }, this), \" \", pendingReplies[thread.id].subject]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-content\",\n                    dangerouslySetInnerHTML: {\n                      __html: editorContents[thread.id] || ''\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 29\n                  }, this), threadAttachments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-attachments\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"attachments-title\",\n                      children: \"Attachments:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"attachment-list\",\n                      children: threadAttachments.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"attachment-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          role: \"img\",\n                          \"aria-label\": \"file\",\n                          children: \"\\uD83D\\uDCC4\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 563,\n                          columnNumber: 39\n                        }, this), \" \", file.name]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 562,\n                        columnNumber: 37\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => togglePreview(thread.id, false),\n                      className: \"cancel-button\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        sendReply(pendingReplies[thread.id].threadId, pendingReplies[thread.id].to, pendingReplies[thread.id].subject, false);\n                        togglePreview(thread.id, false);\n                      },\n                      className: \"send-button\",\n                      children: \"Send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 25\n              }, this)]\n            }, thread.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 15\n        }, this)]\n      }, sender, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-emails\",\n      children: followEmails.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCE8 \", isLoading ? 'Loading emails...' : 'No emails found for the followed addresses.']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchFollowedEmails(),\n          className: \"refresh-button\",\n          disabled: isLoading,\n          children: isLoading ? 'Loading...' : 'Refresh Emails'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCED No emails to show. Add an email address to follow above.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"mHFnFkK9d1f8w7xRz+qZNOmsClE=\");\n_c = EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useEffect","useState","axios","EmailEditor","jsxDEV","_jsxDEV","cleanBody","html","replace","trim","getDateLabel","dateStr","date","Date","today","yesterday","setDate","getDate","toDateString","toLocaleDateString","undefined","year","month","day","weekday","getInitials","from","name","split","map","word","join","slice","toUpperCase","extractEmail","emailMatch","match","getThreadPreview","thread","messages","length","lastMessage","cleanedBody","body","textOnly","substring","EmailList","token","_s","profile","setProfile","threads","setThreads","search","setSearch","userEmail","setUserEmail","followEmails","setFollowEmails","emailInput","setEmailInput","viewMode","setViewMode","expandedThreads","setExpandedThreads","threadSearches","setThreadSearches","pendingReplies","setPendingReplies","attachments","setAttachments","showPreviews","setShowPreviews","editorContents","setEditorContents","isLoading","setIsLoading","fetchProfile","res","get","withCredentials","data","email","err","console","error","message","fetchFollowedEmails","emailsToFetch","Array","isArray","followedEmails","threadsRes","post","emails","groups","forEach","sender","push","setEmailGroups","handleAddEmail","includes","newFollowEmails","then","catch","removeFollowedEmail","indexToRemove","updatedEmails","filter","_","i","alert","toggleThread","threadId","prev","updateThreadSearch","value","updateAttachments","newAttachments","setPendingReplyMeta","meta","togglePreview","updateEditorContent","content","sendReply","to","subject","isDraft","recipient","draft","headers","id","now","toISOString","_err$response","_err$response2","_err$response2$data","response","groupThreadsBySender","emailGroups","firstMessage","filteredThreads","_thread$subject","_thread$messages","toLowerCase","some","msg","_msg$from","_msg$body","className","children","src","picture","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","index","Object","keys","entries","senderThreads","isExpanded","threadSearch","threadAttachments","filteredMsgs","lastDateLabel","threadPreview","toLocaleString","dateLabel","showDateLabel","isMe","dangerouslySetInnerHTML","__html","multiple","newFiles","files","file","role","disabled","_c","$RefreshReg$"],"sources":["D:/MailChat/ChatMail/frontend/src/components/EmailList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport EmailEditor from './EmailEditor';\r\nimport './EmailList.css';\r\n\r\n// Helper functions\r\nconst cleanBody = (html) => {\r\n  if (!html || typeof html !== 'string') return '';\r\n  return html\r\n    .replace(/<style[^>]*>[\\s\\S]*?<\\/style>/gi, '')\r\n    .replace(/<script[^>]*>[\\s\\S]*?<\\/script>/gi, '')\r\n    .replace(/<\\/?(html|head|body|meta|title|link)[^>]*>/gi, '')\r\n    .replace(/<div[^>]+class=\"gmail_quote\"[^>]*>[\\s\\S]*$/gi, '')\r\n    .replace(/<blockquote[^>]*>[\\s\\S]*?<\\/blockquote>/gi, '')\r\n    .replace(/&nbsp;/g, ' ')\r\n    .replace(/\\s{2,}/g, ' ')\r\n    .trim();\r\n};\r\n\r\nconst getDateLabel = (dateStr) => {\r\n  const date = new Date(dateStr);\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n\r\n  if (date.toDateString() === today.toDateString()) return 'Today';\r\n  if (date.toDateString() === yesterday.toDateString()) return 'Yesterday';\r\n  return date.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric', weekday: 'long' });\r\n};\r\n\r\nconst getInitials = (from) => {\r\n  const name = from.split('<')[0].trim();\r\n  return name.split(' ').map(word => word[0]).join('').slice(0, 2).toUpperCase();\r\n};\r\n\r\n// Extract primary email from a sender string (handles formats like \"Name <email@example.com>\")\r\nconst extractEmail = (from) => {\r\n  const emailMatch = from.match(/<([^>]+)>/) || from.match(/([^\\s]+@[^\\s]+)/);\r\n  return emailMatch ? emailMatch[1] : from;\r\n};\r\n\r\n// Get a preview of the thread content (first few words)\r\nconst getThreadPreview = (thread) => {\r\n  if (!thread.messages || thread.messages.length === 0) return '';\r\n  const lastMessage = thread.messages[thread.messages.length - 1];\r\n  const cleanedBody = cleanBody(lastMessage.body);\r\n  const textOnly = cleanedBody.replace(/<[^>]+>/g, ' ').trim();\r\n  return textOnly.length > 60 ? textOnly.substring(0, 60) + '...' : textOnly;\r\n};\r\n\r\nexport default function EmailList({ token }) {\r\n  const [profile, setProfile] = useState(null);\r\n  const [threads, setThreads] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [followEmails, setFollowEmails] = useState([]);\r\n  const [emailInput, setEmailInput] = useState('');\r\n  const [viewMode, setViewMode] = useState('grid');\r\n  \r\n  // Thread-specific state\r\n  const [expandedThreads, setExpandedThreads] = useState({});\r\n  const [threadSearches, setThreadSearches] = useState({});\r\n  const [pendingReplies, setPendingReplies] = useState({});\r\n  const [attachments, setAttachments] = useState({});\r\n  const [showPreviews, setShowPreviews] = useState({});\r\n  const [editorContents, setEditorContents] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Fetch profile data\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/profile', {\r\n          withCredentials: true,\r\n        });\r\n        setProfile(res.data);\r\n        setUserEmail(res.data.email);\r\n      } catch (err) {\r\n        console.error('❌ Failed to load profile:', err.message);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, []);\r\n  const fetchFollowedEmails = async (emailsToFetch = followEmails) => {\r\n    try {\r\n      // First ensure we have the latest list of followed emails\r\n      const res = await axios.get('http://localhost:5000/api/followed-emails', {\r\n        withCredentials: true,\r\n      });\r\n      if (res.data && Array.isArray(res.data.followedEmails)) {\r\n        setFollowEmails(res.data.followedEmails);\r\n      }\r\n      \r\n      // Then fetch the actual email content for these addresses\r\n      setIsLoading(true); // Add this state variable to track loading state\r\n      \r\n      // Fetch email threads for the followed emails\r\n      const threadsRes = await axios.post('http://localhost:5000/api/email-threads', {\r\n        emails: emailsToFetch\r\n      }, {\r\n        withCredentials: true,\r\n      });\r\n      \r\n      if (threadsRes.data && threadsRes.data.threads) {\r\n        // Group emails by sender\r\n        const groups = {};\r\n        threadsRes.data.threads.forEach(thread => {\r\n          // Assuming the first message's from field contains the sender\r\n          const sender = thread.messages[0].from;\r\n          if (!groups[sender]) {\r\n            groups[sender] = [];\r\n          }\r\n          groups[sender].push(thread);\r\n        });\r\n        \r\n        setEmailGroups(groups);\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error('Failed to fetch emails:', error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  // Fetch emails for followed addresses\r\n  useEffect(() => {\r\n    fetchFollowedEmails();\r\n  }, []);\r\n  \r\n  // Update handleAddEmail to save to database\r\n  const handleAddEmail = () => {\r\n    if (emailInput && !followEmails.includes(emailInput)) {\r\n      const newFollowEmails = [...followEmails, emailInput];\r\n      setFollowEmails(newFollowEmails);\r\n      setEmailInput('');\r\n      \r\n      // Save to backend\r\n      axios.post('http://localhost:5000/api/follow-email', {\r\n        email: emailInput\r\n      }, {\r\n        withCredentials: true,\r\n      })\r\n      .then(() => {\r\n        // Fetch emails for the newly added email address\r\n        fetchFollowedEmails(newFollowEmails);\r\n      })\r\n      .catch(error => {\r\n        console.error('Failed to add email to follow:', error);\r\n      });\r\n    }\r\n  };\r\n  \r\n  \r\n  // Update the remove function as well\r\n  const removeFollowedEmail = async (indexToRemove) => {\r\n    try {\r\n      const updatedEmails = followEmails.filter((_, i) => i !== indexToRemove);\r\n      \r\n      await axios.post('http://localhost:5000/api/followed-emails', {\r\n        emails: updatedEmails\r\n      }, {\r\n        withCredentials: true\r\n      });\r\n      \r\n      setFollowEmails(updatedEmails);\r\n    } catch (error) {\r\n      console.error('Failed to remove followed email:', error);\r\n      alert('Failed to remove email from follow list');\r\n    }\r\n  };\r\n  \r\n  // Toggle thread expansion\r\n  const toggleThread = (threadId) => {\r\n    setExpandedThreads(prev => ({\r\n      ...prev,\r\n      [threadId]: !prev[threadId]\r\n    }));\r\n  };\r\n\r\n  // Update thread search\r\n  const updateThreadSearch = (threadId, value) => {\r\n    setThreadSearches(prev => ({\r\n      ...prev,\r\n      [threadId]: value\r\n    }));\r\n  };\r\n\r\n  // Add/remove attachments\r\n  const updateAttachments = (threadId, newAttachments) => {\r\n    setAttachments(prev => ({\r\n      ...prev,\r\n      [threadId]: newAttachments\r\n    }));\r\n  };\r\n\r\n  // Set pending reply metadata\r\n  const setPendingReplyMeta = (threadId, meta) => {\r\n    setPendingReplies(prev => ({\r\n      ...prev,\r\n      [threadId]: meta\r\n    }));\r\n    setShowPreviews(prev => ({\r\n      ...prev,\r\n      [threadId]: true\r\n    }));\r\n  };\r\n\r\n  // Toggle preview visibility\r\n  const togglePreview = (threadId, value) => {\r\n    setShowPreviews(prev => ({\r\n      ...prev,\r\n      [threadId]: value\r\n    }));\r\n  };\r\n\r\n  // Update editor content\r\n  const updateEditorContent = (threadId, content) => {\r\n    setEditorContents(prev => ({\r\n      ...prev,\r\n      [threadId]: content\r\n    }));\r\n  };\r\n\r\n  // Send or save reply\r\n // Send or save reply\r\n// Update the sendReply function in your EmailList.jsx\r\nconst sendReply = async (threadId, to, subject, isDraft) => {\r\n  const html = editorContents[threadId] || '';\r\n  if (!html) return;\r\n  \r\n  try {\r\n    // Format the recipient correctly if needed\r\n    const recipient = to.includes('<') ? to : `<${to}>`;\r\n    \r\n    await axios.post('http://localhost:5000/api/reply', {\r\n      // Skip threadId if it's not a valid Gmail thread ID\r\n      // threadId: threadId, \r\n      to: recipient,\r\n      subject: `Re: ${subject}`,\r\n      message: html,\r\n      draft: isDraft\r\n    }, { \r\n      withCredentials: true,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    // Add reply to local thread\r\n    setThreads(prev =>\r\n      prev.map(thread => {\r\n        if (thread.id !== threadId) return thread;\r\n        return {\r\n          ...thread,\r\n          messages: [\r\n            ...thread.messages,\r\n            {\r\n              id: `local-${Date.now()}`,\r\n              from: userEmail,\r\n              subject,\r\n              date: new Date().toISOString(),\r\n              body: html,\r\n            }\r\n          ],\r\n        };\r\n      })\r\n    );\r\n\r\n    // Show success message\r\n    alert(isDraft ? '✅ Draft saved!' : '✅ Reply sent!');\r\n\r\n    // Reset editor content\r\n    updateEditorContent(threadId, '');\r\n    \r\n    // Reset preview state\r\n    togglePreview(threadId, false);\r\n    \r\n    // Clear attachments\r\n    updateAttachments(threadId, []);\r\n    \r\n  } catch (err) {\r\n    console.error('❌ Reply failed:', err.response?.data || err.message);\r\n    alert(`Failed to send reply: ${err.response?.data?.error || err.message}`);\r\n  }\r\n};\r\n\r\n  // Group threads by sender email\r\n  const groupThreadsBySender = () => {\r\n    const emailGroups = {};\r\n    \r\n    threads.forEach(thread => {\r\n      if (!thread.messages || thread.messages.length === 0) return;\r\n      \r\n      // Get the sender of the first message\r\n      const firstMessage = thread.messages[0];\r\n      const sender = extractEmail(firstMessage.from);\r\n      \r\n      if (!emailGroups[sender]) {\r\n        emailGroups[sender] = [];\r\n      }\r\n      \r\n      emailGroups[sender].push(thread);\r\n    });\r\n    \r\n    return emailGroups;\r\n  };\r\n\r\n  // Filter threads based on search\r\n  const filteredThreads = threads.filter(thread =>\r\n    thread.subject?.toLowerCase().includes(search.toLowerCase()) ||\r\n    thread.messages?.some(msg =>\r\n      msg.from?.toLowerCase().includes(search.toLowerCase()) ||\r\n      msg.body?.toLowerCase().includes(search.toLowerCase())\r\n    )\r\n  );\r\n\r\n  // Group threads by sender\r\n  const emailGroups = groupThreadsBySender();\r\n\r\n  return (\r\n    <div className=\"email-list\">\r\n      {/* Profile Section */}\r\n      {profile && (\r\n        <div className=\"profile-container\">\r\n          <img src={profile.picture} alt=\"avatar\" className=\"profile-image\" />\r\n          <div>\r\n            <div><strong>{profile.name}</strong></div>\r\n            <div className=\"profile-email\">{profile.email}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n  \r\n      {/* Search and Email Management */}\r\n      <div className=\"search-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"🔍 Search all threads...\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          className=\"search-input\"\r\n        />\r\n  \r\n        <div className=\"email-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add email to follow...\"\r\n            value={emailInput}\r\n            onChange={(e) => setEmailInput(e.target.value)}\r\n            className=\"email-input\"\r\n          />\r\n          <button\r\n            onClick={handleAddEmail}\r\n            className=\"add-button\"\r\n          >\r\n            Add Email\r\n          </button>\r\n        </div>\r\n  \r\n        <div className=\"follow-header\">\r\n          <div className=\"follow-count\">\r\n            {followEmails.length > 0 ? \r\n              `Following ${followEmails.length} email${followEmails.length > 1 ? 's' : ''}` : \r\n              'No emails followed yet'}\r\n          </div>\r\n          <div className=\"view-buttons\">\r\n            <button \r\n              onClick={() => setViewMode('grid')}\r\n              className={`view-button ${viewMode === 'grid' ? 'active' : ''}`}\r\n            >\r\n              Grid View\r\n            </button>\r\n            <button \r\n              onClick={() => setViewMode('list')}\r\n              className={`view-button ${viewMode === 'list' ? 'active' : ''}`}\r\n            >\r\n              List View\r\n            </button>\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"email-chips\">\r\n          {followEmails.map((email, index) => (\r\n            <div key={index} className=\"email-chip\">\r\n              <span>{email}</span>\r\n              <button \r\n                onClick={() => removeFollowedEmail(index)}\r\n                className=\"remove-button\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n  \r\n      {/* Email Threads Grouped by Sender */}\r\n      {Object.keys(emailGroups).length > 0 ? (\r\n        <div className=\"email-groups\">\r\n          {Object.entries(emailGroups).map(([sender, senderThreads]) => (\r\n            <div key={sender} className=\"email-group\">\r\n              <h2 className=\"sender-email\">{sender}</h2>\r\n              \r\n              <div className={viewMode === 'grid' ? 'grid-container' : 'list-container'}>\r\n                {senderThreads.map((thread) => {\r\n                  const isExpanded = expandedThreads[thread.id] || false;\r\n                  const threadSearch = threadSearches[thread.id] || '';\r\n                  const threadAttachments = attachments[thread.id] || [];\r\n                  \r\n                  const filteredMsgs = thread.messages.filter(msg =>\r\n                    msg.from.toLowerCase().includes(threadSearch.toLowerCase()) ||\r\n                    msg.body.toLowerCase().includes(threadSearch.toLowerCase())\r\n                  );\r\n  \r\n                  let lastDateLabel = '';\r\n                  const threadPreview = getThreadPreview(thread);\r\n  \r\n                  return (\r\n                    <div key={thread.id} className={`email-thread ${isExpanded ? 'expanded' : ''}`}>\r\n                      <div className=\"thread-header\" onClick={() => toggleThread(thread.id)}>\r\n                        <h3 className=\"thread-title\">\r\n                          📬 {thread.subject || '(no subject)'}\r\n                        </h3>\r\n                        <div className=\"thread-preview\">{threadPreview}</div>\r\n                        <span className={`thread-toggle ${isExpanded ? 'expanded' : ''}`}>▼</span>\r\n                      </div>\r\n                      \r\n                      <div className=\"thread-info\">\r\n                        {thread.messages.length} message{thread.messages.length !== 1 ? 's' : ''} • \r\n                        Last activity: {new Date(thread.messages[thread.messages.length - 1].date).toLocaleString()}\r\n                      </div>\r\n\r\n                      {isExpanded && (\r\n                        <div className=\"thread-expanded\">\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search in this thread...\"\r\n                            value={threadSearch}\r\n                            onChange={(e) => updateThreadSearch(thread.id, e.target.value)}\r\n                            className=\"thread-search\"\r\n                          />\r\n\r\n                          <div className=\"messages-container\">\r\n                            {filteredMsgs.map((msg, i) => {\r\n                              const dateLabel = getDateLabel(msg.date);\r\n                              const showDateLabel = dateLabel !== lastDateLabel;\r\n                              lastDateLabel = dateLabel;\r\n\r\n                              const isMe = msg.from.includes(userEmail);\r\n\r\n                              return (\r\n                                <div key={i} className=\"message-wrapper\">\r\n                                  {showDateLabel && (\r\n                                    <div className=\"date-label\">\r\n                                      ── {dateLabel} ──\r\n                                    </div>\r\n                                  )}\r\n                                  <div className={`message ${isMe ? 'sent' : 'received'}`}>\r\n                                    <div className={`avatar ${isMe ? 'me' : ''}`}>\r\n                                      {isMe ? 'You' : getInitials(msg.from)}\r\n                                    </div>\r\n                                    <div className=\"message-content\">\r\n                                      <div className=\"message-sender\">{isMe ? 'You' : msg.from}</div>\r\n                                      <div className=\"message-body\"\r\n                                        dangerouslySetInnerHTML={{ __html: cleanBody(msg.body) }} />\r\n                                      <div className=\"message-time\">{new Date(msg.date).toLocaleString()}</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </div>\r\n\r\n                          <div className=\"reply-container\">\r\n                            <h4 className=\"reply-title\">Reply</h4>\r\n                            \r\n                            {/* For each thread, we render a separate EmailEditor component */}\r\n                            <EmailEditor\r\n                              threadId={thread.id}\r\n                              value={editorContents[thread.id] || ''}\r\n                              onChange={(html) => updateEditorContent(thread.id, html)}\r\n                            />\r\n\r\n                            <div className=\"attachment-section\">\r\n                              <label className=\"attachment-label\">📎 Attach files:\r\n                                <input \r\n                                  type=\"file\" \r\n                                  multiple\r\n                                  onChange={(e) => {\r\n                                    const newFiles = Array.from(e.target.files || []);\r\n                                    updateAttachments(thread.id, [...threadAttachments, ...newFiles]);\r\n                                  }} \r\n                                  className=\"file-input\"\r\n                                />\r\n                              </label>\r\n                              <div className=\"attachment-list\">\r\n                                {threadAttachments.map((file, index) => (\r\n                                  <div key={index} className=\"attachment-item\">\r\n                                    <span className=\"file-icon\">📄</span>\r\n                                    {file.name}\r\n                                    <button \r\n                                      onClick={() => updateAttachments(thread.id, threadAttachments.filter((_, i) => i !== index))} \r\n                                      className=\"remove-button\"\r\n                                    >\r\n                                      ×\r\n                                    </button>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"button-group\">\r\n                              <button\r\n                                onClick={() => sendReply(thread.id, thread.messages[0].from, thread.subject, false)}\r\n                                className=\"action-button send\"\r\n                              >\r\n                                <span className=\"button-icon\">✉️</span>\r\n                                Send Reply\r\n                              </button>\r\n                              <button\r\n                                onClick={() => {\r\n                                  setPendingReplyMeta(thread.id, {\r\n                                    threadId: thread.id,\r\n                                    to: thread.messages[0].from,\r\n                                    subject: thread.subject,\r\n                                  });\r\n                                }}\r\n                                className=\"action-button preview\"\r\n                              >\r\n                                <span className=\"button-icon\">👁️</span>\r\n                                Preview\r\n                              </button>\r\n                              <button\r\n                                onClick={() => sendReply(thread.id, thread.messages[0].from, thread.subject, true)}\r\n                                className=\"action-button draft\"\r\n                              >\r\n                                <span className=\"button-icon\">💾</span>\r\n                                Save Draft\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Preview Modal */}\r\n                      {showPreviews[thread.id] && pendingReplies[thread.id] && (\r\n                        <div className=\"preview-modal\">\r\n                          <div className=\"preview-card\">\r\n                            <h3 className=\"preview-title\">📨 Preview Your Reply</h3>\r\n                            <div className=\"preview-meta\">\r\n                              <div className=\"preview-meta-item\"><strong>To:</strong> {pendingReplies[thread.id].to}</div>\r\n                              <div className=\"preview-meta-item\"><strong>Subject:</strong> {pendingReplies[thread.id].subject}</div>\r\n                            </div>\r\n                            <div className=\"preview-content\" \r\n                              dangerouslySetInnerHTML={{ __html: editorContents[thread.id] || '' }} />\r\n                            \r\n                            {threadAttachments.length > 0 && (\r\n                              <div className=\"preview-attachments\">\r\n                                <div className=\"attachments-title\">Attachments:</div>\r\n                                <div className=\"attachment-list\">\r\n                                  {threadAttachments.map((file, index) => (\r\n                                    <div key={index} className=\"attachment-item\">\r\n                                      <span role=\"img\" aria-label=\"file\">📄</span> {file.name}\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                            \r\n                            <div className=\"preview-actions\">\r\n                              <button \r\n                                onClick={() => togglePreview(thread.id, false)} \r\n                                className=\"cancel-button\"\r\n                              >\r\n                                Cancel\r\n                              </button>\r\n                              <button \r\n                                onClick={() => {\r\n                                  sendReply(pendingReplies[thread.id].threadId, pendingReplies[thread.id].to, pendingReplies[thread.id].subject, false);\r\n                                  togglePreview(thread.id, false);\r\n                                }} \r\n                                className=\"send-button\"\r\n                              >\r\n                                Send\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-emails\">\r\n        {followEmails.length > 0 ? (\r\n          <div className=\"loading-state\">\r\n            <p>📨 {isLoading ? 'Loading emails...' : 'No emails found for the followed addresses.'}</p>\r\n            <button \r\n              onClick={() => fetchFollowedEmails()} \r\n              className=\"refresh-button\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Loading...' : 'Refresh Emails'}\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <p>📭 No emails to show. Add an email address to follow above.</p>\r\n        )}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}