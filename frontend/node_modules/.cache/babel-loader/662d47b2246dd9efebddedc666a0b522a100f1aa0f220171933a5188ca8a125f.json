{"ast":null,"code":"var _jsxFileName = \"D:\\\\MailChat\\\\ChatMail\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailList({\n  token\n}) {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [openThreadId, setOpenThreadId] = useState(null);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/emails', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setThreads(res.data);\n      } catch (error) {\n        var _error$response;\n        console.error('Email fetch failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    };\n    if (token) fetchEmails();\n  }, [token]);\n  const toggleThread = id => {\n    setOpenThreadId(openThreadId === id ? null : id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list\",\n    children: threads.length > 0 ? threads.map(thread => {\n      var _thread$messages;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-thread\",\n        style: {\n          marginBottom: '20px',\n          border: '1px solid #ccc',\n          borderRadius: '8px',\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '12px',\n            cursor: 'pointer'\n          },\n          onClick: () => toggleThread(thread.id),\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: thread.subject || thread.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), openThreadId === thread.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '12px',\n            backgroundColor: '#fff'\n          },\n          children: (_thread$messages = thread.messages) === null || _thread$messages === void 0 ? void 0 : _thread$messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.isMe ? 'sent' : 'received'}`,\n            style: {\n              padding: '10px',\n              margin: '10px 0',\n              backgroundColor: msg.isMe ? '#d1f7c4' : '#eee',\n              borderRadius: '10px',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '4px'\n              },\n              children: msg.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: msg.body\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                marginTop: '6px',\n                color: '#555'\n              },\n              children: new Date(msg.date).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading emails...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"sMPTrzyjifn0OmAkRyYebFe3F/4=\");\n_c = EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","EmailList","token","_s","threads","setThreads","openThreadId","setOpenThreadId","fetchEmails","res","get","headers","Authorization","data","error","_error$response","console","response","message","toggleThread","id","className","children","length","map","thread","_thread$messages","style","marginBottom","border","borderRadius","overflow","backgroundColor","padding","cursor","onClick","subject","fileName","_jsxFileName","lineNumber","columnNumber","messages","msg","i","isMe","margin","boxShadow","fontWeight","from","dangerouslySetInnerHTML","__html","body","fontSize","marginTop","color","Date","date","toLocaleString","_c","$RefreshReg$"],"sources":["D:/MailChat/ChatMail/frontend/src/components/EmailList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function EmailList({ token }) {\r\n  const [threads, setThreads] = useState([]);\r\n  const [openThreadId, setOpenThreadId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/emails', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setThreads(res.data);\r\n      } catch (error) {\r\n        console.error('Email fetch failed:', error.response?.data || error.message);\r\n      }\r\n    };\r\n\r\n    if (token) fetchEmails();\r\n  }, [token]);\r\n\r\n  const toggleThread = (id) => {\r\n    setOpenThreadId(openThreadId === id ? null : id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"email-list\">\r\n      {threads.length > 0 ? (\r\n        threads.map((thread) => (\r\n          <div key={thread.id} className=\"email-thread\" style={{ marginBottom: '20px', border: '1px solid #ccc', borderRadius: '8px', overflow: 'hidden' }}>\r\n            <div \r\n              style={{ backgroundColor: '#f5f5f5', padding: '12px', cursor: 'pointer' }}\r\n              onClick={() => toggleThread(thread.id)}\r\n            >\r\n              <strong>{thread.subject || thread.id}</strong>\r\n            </div>\r\n\r\n            {openThreadId === thread.id && (\r\n              <div style={{ padding: '12px', backgroundColor: '#fff' }}>\r\n                {thread.messages?.map((msg, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className={`message ${msg.isMe ? 'sent' : 'received'}`}\r\n                    style={{\r\n                      padding: '10px',\r\n                      margin: '10px 0',\r\n                      backgroundColor: msg.isMe ? '#d1f7c4' : '#eee',\r\n                      borderRadius: '10px',\r\n                      boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n                    }}\r\n                  >\r\n                    <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>{msg.from}</div>\r\n                    <div dangerouslySetInnerHTML={{ __html: msg.body }} />\r\n                    <div style={{ fontSize: '12px', marginTop: '6px', color: '#555' }}>{new Date(msg.date).toLocaleString()}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading emails...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}