{"ast":null,"code":"var _jsxFileName = \"D:\\\\MailChat\\\\ChatMail\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailList({\n  token\n}) {\n  _s();\n  const [threads, setThreads] = useState([]);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/emails', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setThreads(res.data);\n      } catch (error) {\n        var _error$response;\n        console.error('Email fetch failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    };\n    if (token) fetchEmails();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list\",\n    children: threads.length > 0 ? threads.map(thread => {\n      var _thread$messages;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-thread\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Thread: \", thread.subject || thread.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), (_thread$messages = thread.messages) === null || _thread$messages === void 0 ? void 0 : _thread$messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isMe ? 'sent' : 'received'}`,\n          style: {\n            padding: '8px',\n            margin: '6px 0',\n            backgroundColor: msg.isMe ? '#d1f7c4' : '#eee',\n            borderRadius: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(msg.date).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading emails...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"sq9hmC9Ec1RKesUYep9W9DPjbrM=\");\n_c = EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","EmailList","token","_s","threads","setThreads","fetchEmails","res","get","headers","Authorization","data","error","_error$response","console","response","message","className","children","length","map","thread","_thread$messages","subject","id","fileName","_jsxFileName","lineNumber","columnNumber","messages","msg","i","isMe","style","padding","margin","backgroundColor","borderRadius","from","body","Date","date","toLocaleString","_c","$RefreshReg$"],"sources":["D:/MailChat/ChatMail/frontend/src/components/EmailList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function EmailList({ token }) {\r\n  const [threads, setThreads] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/emails', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setThreads(res.data);\r\n      } catch (error) {\r\n        console.error('Email fetch failed:', error.response?.data || error.message);\r\n      }\r\n    };\r\n\r\n    if (token) fetchEmails();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"email-list\">\r\n      {threads.length > 0 ? (\r\n        threads.map((thread) => (\r\n          <div key={thread.id} className=\"email-thread\">\r\n            <h3>Thread: {thread.subject || thread.id}</h3>\r\n            {thread.messages?.map((msg, i) => (\r\n              <div\r\n                key={i}\r\n                className={`message ${msg.isMe ? 'sent' : 'received'}`}\r\n                style={{\r\n                  padding: '8px',\r\n                  margin: '6px 0',\r\n                  backgroundColor: msg.isMe ? '#d1f7c4' : '#eee',\r\n                  borderRadius: '8px',\r\n                }}\r\n              >\r\n                <strong>{msg.from}</strong> <br />\r\n                <span>{msg.body}</span> <br />\r\n                <small>{new Date(msg.date).toLocaleString()}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading emails...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}