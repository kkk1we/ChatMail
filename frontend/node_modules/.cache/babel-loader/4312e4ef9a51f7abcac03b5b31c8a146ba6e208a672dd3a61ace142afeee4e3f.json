{"ast":null,"code":"var _jsxFileName = \"D:\\\\MailChat\\\\ChatMail\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './EmailList.css'; // Optional: externalize CSS for animation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction cleanBody(html) {\n  if (!html || typeof html !== 'string') return '';\n  return html.replace(/<style[^>]*>[\\s\\S]*?<\\/style>/gi, '').replace(/<script[^>]*>[\\s\\S]*?<\\/script>/gi, '').replace(/<\\/?(html|head|body|meta|title|link)[^>]*>/gi, '').replace(/<div[^>]+class=\"gmail_quote\"[^>]*>[\\s\\S]*$/gi, '').replace(/<blockquote[^>]*>[\\s\\S]*?<\\/blockquote>/gi, '').replace(/&nbsp;/g, ' ').replace(/\\s{2,}/g, ' ').trim();\n}\nfunction getDateLabel(dateStr) {\n  const date = new Date(dateStr);\n  const today = new Date();\n  const yesterday = new Date();\n  yesterday.setDate(today.getDate() - 1);\n  if (date.toDateString() === today.toDateString()) return 'Today';\n  if (date.toDateString() === yesterday.toDateString()) return 'Yesterday';\n  return date.toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n  });\n}\nexport default function EmailList({\n  token\n}) {\n  _s();\n  const [replyText, setReplyText] = useState('');\n  const [threads, setThreads] = useState([]);\n  const [expandedThreadId, setExpandedThreadId] = useState(null);\n  const [search, setSearch] = useState('');\n  const [visibleCount, setVisibleCount] = useState(5);\n  const [threadSearch, setThreadSearch] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  useEffect(() => {\n    const fetchEmails = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/emails', {\n          withCredentials: true // 🧠 important to send the session cookie\n        });\n        setThreads(res.data);\n      } catch (error) {\n        var _error$response;\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n          console.warn('❌ Not authenticated, redirecting...');\n          window.location.href = '/';\n        } else {\n          var _error$response2;\n          console.error('❌ Email fetch failed:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n        }\n      }\n    };\n    fetchEmails();\n  }, []);\n  const toggleThread = id => {\n    setExpandedThreadId(expandedThreadId === id ? null : id);\n    setThreadSearch('');\n  };\n  const getInitials = from => {\n    const name = from.split('<')[0].trim();\n    return name.split(' ').map(word => word[0]).join('').slice(0, 2).toUpperCase();\n  };\n  const sendReply = async (threadId, to, subject) => {\n    try {\n      await axios.post('http://localhost:5000/api/reply', {\n        threadId,\n        to,\n        subject,\n        message: replyText\n      }, {\n        withCredentials: true\n      });\n      alert('✅ Reply sent!');\n      setReplyText('');\n    } catch (err) {\n      console.error('❌ Reply failed:', err);\n      alert('Failed to send reply.');\n    }\n  };\n  const filteredThreads = threads.filter(thread => {\n    var _thread$subject, _thread$messages;\n    return ((_thread$subject = thread.subject) === null || _thread$subject === void 0 ? void 0 : _thread$subject.toLowerCase().includes(search.toLowerCase())) || ((_thread$messages = thread.messages) === null || _thread$messages === void 0 ? void 0 : _thread$messages.some(msg => {\n      var _msg$from, _msg$body;\n      return ((_msg$from = msg.from) === null || _msg$from === void 0 ? void 0 : _msg$from.toLowerCase().includes(search.toLowerCase())) || ((_msg$body = msg.body) === null || _msg$body === void 0 ? void 0 : _msg$body.toLowerCase().includes(search.toLowerCase()));\n    }));\n  }).slice(0, visibleCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list\",\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uD83D\\uDD0D Search all threads...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      style: {\n        padding: '10px',\n        width: '100%',\n        marginBottom: '20px',\n        borderRadius: '8px',\n        border: '1px solid #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), filteredThreads.length > 0 ? filteredThreads.map(thread => {\n      const expanded = expandedThreadId === thread.id;\n      const filteredMsgs = thread.messages.filter(msg => msg.from.toLowerCase().includes(threadSearch.toLowerCase()) || msg.body.toLowerCase().includes(threadSearch.toLowerCase()));\n      let lastDateLabel = '';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `email-thread ${expanded ? 'expanded' : ''}`,\n        style: {\n          border: '2px solid #ccc',\n          borderRadius: '10px',\n          padding: '15px',\n          marginBottom: '25px',\n          backgroundColor: '#fafafa',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            cursor: 'pointer',\n            color: '#333'\n          },\n          onClick: () => toggleThread(thread.id),\n          children: [\"\\uD83D\\uDCEC \", thread.subject || '(no subject)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search in this thread...\",\n            value: threadSearch,\n            onChange: e => setThreadSearch(e.target.value),\n            style: {\n              padding: '8px',\n              width: '100%',\n              marginBottom: '10px',\n              borderRadius: '6px',\n              border: '1px solid #aaa'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxHeight: '400px',\n              overflowY: 'auto',\n              paddingRight: '10px'\n            },\n            children: filteredMsgs.map((msg, i) => {\n              const dateLabel = getDateLabel(msg.date);\n              const showDateLabel = dateLabel !== lastDateLabel;\n              lastDateLabel = dateLabel;\n              const isMe = msg.from.includes(userEmail); // Detect if message is from logged-in user\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column'\n                },\n                children: [showDateLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center',\n                    margin: '15px 0 5px',\n                    color: '#666',\n                    fontSize: '0.85em',\n                    fontWeight: 'bold'\n                  },\n                  children: [\"\\u2500\\u2500 \", dateLabel, \" \\u2500\\u2500\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message\",\n                  style: {\n                    display: 'flex',\n                    alignSelf: isMe ? 'flex-end' : 'flex-start',\n                    maxWidth: '75%',\n                    backgroundColor: isMe ? '#dcf8c6' : '#fff',\n                    padding: '10px',\n                    borderRadius: '10px',\n                    margin: '5px 0',\n                    border: isMe ? '1px solid #a2d5a2' : '1px solid #ccc',\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"avatar\",\n                    style: {\n                      backgroundColor: '#888',\n                      color: '#fff',\n                      borderRadius: '50%',\n                      width: '36px',\n                      height: '36px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontWeight: 'bold',\n                      fontSize: '0.9em',\n                      marginRight: '10px'\n                    },\n                    children: getInitials(msg.from)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontWeight: 'bold'\n                      },\n                      children: msg.from\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"email-body\",\n                      style: {\n                        marginTop: '6px',\n                        marginBottom: '8px'\n                      },\n                      dangerouslySetInnerHTML: {\n                        __html: cleanBody(msg.body)\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: '0.8em',\n                        color: '#888'\n                      },\n                      children: new Date(msg.date).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 27\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: replyText,\n              onChange: e => setReplyText(e.target.value),\n              placeholder: \"Type your reply...\",\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '8px',\n                borderRadius: '6px',\n                border: '1px solid #ccc'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sendReply(thread.id, thread.messages[0].from, thread.subject),\n              style: {\n                marginTop: '5px',\n                padding: '8px 16px',\n                backgroundColor: '#4caf50',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '6px',\n                cursor: 'pointer'\n              },\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, thread.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDCE8 Loading emails...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), visibleCount < threads.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setVisibleCount(prev => prev + 5),\n      style: {\n        marginTop: '15px',\n        padding: '10px 18px',\n        borderRadius: '8px',\n        backgroundColor: '#4caf50',\n        color: '#fff',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"J7K9EWF2OPdmRgEnlmF5knKtLsg=\");\n_c = EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","cleanBody","html","replace","trim","getDateLabel","dateStr","date","Date","today","yesterday","setDate","getDate","toDateString","toLocaleDateString","undefined","year","month","day","weekday","EmailList","token","_s","replyText","setReplyText","threads","setThreads","expandedThreadId","setExpandedThreadId","search","setSearch","visibleCount","setVisibleCount","threadSearch","setThreadSearch","userEmail","setUserEmail","fetchEmails","res","get","withCredentials","data","error","_error$response","response","status","console","warn","window","location","href","_error$response2","message","toggleThread","id","getInitials","from","name","split","map","word","join","slice","toUpperCase","sendReply","threadId","to","subject","post","alert","err","filteredThreads","filter","thread","_thread$subject","_thread$messages","toLowerCase","includes","messages","some","msg","_msg$from","_msg$body","body","className","style","padding","fontFamily","children","type","placeholder","value","onChange","e","target","width","marginBottom","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","length","expanded","filteredMsgs","lastDateLabel","backgroundColor","boxShadow","cursor","color","onClick","marginTop","maxHeight","overflowY","paddingRight","i","dateLabel","showDateLabel","isMe","display","flexDirection","textAlign","margin","fontSize","fontWeight","alignSelf","maxWidth","height","alignItems","justifyContent","marginRight","flex","dangerouslySetInnerHTML","__html","toLocaleString","rows","prev","_c","$RefreshReg$"],"sources":["D:/MailChat/ChatMail/frontend/src/components/EmailList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './EmailList.css'; // Optional: externalize CSS for animation\r\n\r\nfunction cleanBody(html) {\r\n  if (!html || typeof html !== 'string') return '';\r\n  return html\r\n    .replace(/<style[^>]*>[\\s\\S]*?<\\/style>/gi, '')\r\n    .replace(/<script[^>]*>[\\s\\S]*?<\\/script>/gi, '')\r\n    .replace(/<\\/?(html|head|body|meta|title|link)[^>]*>/gi, '')\r\n    .replace(/<div[^>]+class=\"gmail_quote\"[^>]*>[\\s\\S]*$/gi, '')\r\n    .replace(/<blockquote[^>]*>[\\s\\S]*?<\\/blockquote>/gi, '')\r\n    .replace(/&nbsp;/g, ' ')\r\n    .replace(/\\s{2,}/g, ' ')\r\n    .trim();\r\n}\r\n\r\n\r\nfunction getDateLabel(dateStr) {\r\n  const date = new Date(dateStr);\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n\r\n  if (date.toDateString() === today.toDateString()) return 'Today';\r\n  if (date.toDateString() === yesterday.toDateString()) return 'Yesterday';\r\n  return date.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric', weekday: 'long' });\r\n}\r\n\r\nexport default function EmailList({ token }) {\r\n  const [replyText, setReplyText] = useState('');\r\n  const [threads, setThreads] = useState([]);\r\n  const [expandedThreadId, setExpandedThreadId] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [visibleCount, setVisibleCount] = useState(5);\r\n  const [threadSearch, setThreadSearch] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/emails', {\r\n          withCredentials: true, // 🧠 important to send the session cookie\r\n        });\r\n  \r\n        setThreads(res.data);\r\n      } catch (error) {\r\n        if (error.response?.status === 401) {\r\n          console.warn('❌ Not authenticated, redirecting...');\r\n          window.location.href = '/';\r\n        } else {\r\n          console.error('❌ Email fetch failed:', error.response?.data || error.message);\r\n        }\r\n      }\r\n    };\r\n  \r\n    fetchEmails();\r\n  }, []);\r\n\r\n  const toggleThread = (id) => {\r\n    setExpandedThreadId(expandedThreadId === id ? null : id);\r\n    setThreadSearch('');\r\n  };\r\n\r\n  const getInitials = (from) => {\r\n    const name = from.split('<')[0].trim();\r\n    return name.split(' ').map(word => word[0]).join('').slice(0, 2).toUpperCase();\r\n  };\r\n  const sendReply = async (threadId, to, subject) => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/reply', {\r\n        threadId,\r\n        to,\r\n        subject,\r\n        message: replyText,\r\n      }, { withCredentials: true });\r\n  \r\n      alert('✅ Reply sent!');\r\n      setReplyText('');\r\n    } catch (err) {\r\n      console.error('❌ Reply failed:', err);\r\n      alert('Failed to send reply.');\r\n    }\r\n  };\r\n  \r\n  const filteredThreads = threads\r\n    .filter((thread) =>\r\n      thread.subject?.toLowerCase().includes(search.toLowerCase()) ||\r\n      thread.messages?.some(msg =>\r\n        msg.from?.toLowerCase().includes(search.toLowerCase()) ||\r\n        msg.body?.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    )\r\n    .slice(0, visibleCount);\r\n\r\n  return (\r\n    <div className=\"email-list\" style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"🔍 Search all threads...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        style={{ padding: '10px', width: '100%', marginBottom: '20px', borderRadius: '8px', border: '1px solid #ccc' }}\r\n      />\r\n\r\n      {filteredThreads.length > 0 ? (\r\n        filteredThreads.map((thread) => {\r\n          const expanded = expandedThreadId === thread.id;\r\n          const filteredMsgs = thread.messages.filter(msg =>\r\n            msg.from.toLowerCase().includes(threadSearch.toLowerCase()) ||\r\n            msg.body.toLowerCase().includes(threadSearch.toLowerCase())\r\n          );\r\n\r\n          let lastDateLabel = '';\r\n\r\n          return (\r\n            <div\r\n              key={thread.id}\r\n              className={`email-thread ${expanded ? 'expanded' : ''}`}\r\n              style={{\r\n                border: '2px solid #ccc',\r\n                borderRadius: '10px',\r\n                padding: '15px',\r\n                marginBottom: '25px',\r\n                backgroundColor: '#fafafa',\r\n                boxShadow: '0 2px 6px rgba(0,0,0,0.05)',\r\n              }}\r\n            >\r\n              <h3 style={{ cursor: 'pointer', color: '#333' }} onClick={() => toggleThread(thread.id)}>\r\n                📬 {thread.subject || '(no subject)'}\r\n              </h3>\r\n\r\n              {expanded && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search in this thread...\"\r\n                    value={threadSearch}\r\n                    onChange={(e) => setThreadSearch(e.target.value)}\r\n                    style={{ padding: '8px', width: '100%', marginBottom: '10px', borderRadius: '6px', border: '1px solid #aaa' }}\r\n                  />\r\n\r\n                  <div style={{ maxHeight: '400px', overflowY: 'auto', paddingRight: '10px' }}>\r\n                    {filteredMsgs.map((msg, i) => {\r\n                      const dateLabel = getDateLabel(msg.date);\r\n                      const showDateLabel = dateLabel !== lastDateLabel;\r\n                      lastDateLabel = dateLabel;\r\n\r\n                      const isMe = msg.from.includes(userEmail); // Detect if message is from logged-in user\r\n\r\n                      return (\r\n                        <div key={i} style={{ display: 'flex', flexDirection: 'column' }}>\r\n                          {showDateLabel && (\r\n                            <div style={{\r\n                              textAlign: 'center',\r\n                              margin: '15px 0 5px',\r\n                              color: '#666',\r\n                              fontSize: '0.85em',\r\n                              fontWeight: 'bold'\r\n                            }}>\r\n                              ── {dateLabel} ──\r\n                            </div>\r\n                          )}\r\n                          <div\r\n                            className=\"message\"\r\n                            style={{\r\n                              display: 'flex',\r\n                              alignSelf: isMe ? 'flex-end' : 'flex-start',\r\n                              maxWidth: '75%',\r\n                              backgroundColor: isMe ? '#dcf8c6' : '#fff',\r\n                              padding: '10px',\r\n                              borderRadius: '10px',\r\n                              margin: '5px 0',\r\n                              border: isMe ? '1px solid #a2d5a2' : '1px solid #ccc',\r\n                              boxShadow: '0 1px 3px rgba(0,0,0,0.05)',\r\n                            }}\r\n                          >\r\n                            <div\r\n                              className=\"avatar\"\r\n                              style={{\r\n                                backgroundColor: '#888',\r\n                                color: '#fff',\r\n                                borderRadius: '50%',\r\n                                width: '36px',\r\n                                height: '36px',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                fontWeight: 'bold',\r\n                                fontSize: '0.9em',\r\n                                marginRight: '10px',\r\n                              }}\r\n                            >\r\n                              {getInitials(msg.from)}\r\n                            </div>\r\n                            <div style={{ flex: 1 }}>\r\n                              <div style={{ fontWeight: 'bold' }}>{msg.from}</div>\r\n                              <div\r\n                                className=\"email-body\"\r\n                                style={{ marginTop: '6px', marginBottom: '8px' }}\r\n                                dangerouslySetInnerHTML={{ __html: cleanBody(msg.body) }}\r\n                              />\r\n                              <div style={{ fontSize: '0.8em', color: '#888' }}>\r\n                                {new Date(msg.date).toLocaleString()}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n\r\n                  {/* Reply box (UI only) */}\r\n                  <div style={{ marginTop: '10px' }}>\r\n                  <textarea\r\n                        value={replyText}\r\n                        onChange={(e) => setReplyText(e.target.value)}\r\n                        placeholder=\"Type your reply...\"\r\n                        rows={3}\r\n                        style={{ width: '100%', padding: '8px', borderRadius: '6px', border: '1px solid #ccc' }}\r\n                      />\r\n                      <button\r\n                        onClick={() => sendReply(thread.id, thread.messages[0].from, thread.subject)}\r\n                        style={{\r\n                          marginTop: '5px',\r\n                          padding: '8px 16px',\r\n                          backgroundColor: '#4caf50',\r\n                          color: '#fff',\r\n                          border: 'none',\r\n                          borderRadius: '6px',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        Send\r\n                      </button>\r\n\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <p>📨 Loading emails...</p>\r\n      )}\r\n\r\n      {visibleCount < threads.length && (\r\n        <button\r\n          onClick={() => setVisibleCount(prev => prev + 5)}\r\n          style={{\r\n            marginTop: '15px',\r\n            padding: '10px 18px',\r\n            borderRadius: '8px',\r\n            backgroundColor: '#4caf50',\r\n            color: '#fff',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAACC,IAAI,EAAE;EACvB,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;EAChD,OAAOA,IAAI,CACRC,OAAO,CAAC,iCAAiC,EAAE,EAAE,CAAC,CAC9CA,OAAO,CAAC,mCAAmC,EAAE,EAAE,CAAC,CAChDA,OAAO,CAAC,8CAA8C,EAAE,EAAE,CAAC,CAC3DA,OAAO,CAAC,8CAA8C,EAAE,EAAE,CAAC,CAC3DA,OAAO,CAAC,2CAA2C,EAAE,EAAE,CAAC,CACxDA,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CACvBA,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CACvBC,IAAI,CAAC,CAAC;AACX;AAGA,SAASC,YAAYA,CAACC,OAAO,EAAE;EAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;EAC9B,MAAMG,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;EACxB,MAAME,SAAS,GAAG,IAAIF,IAAI,CAAC,CAAC;EAC5BE,SAAS,CAACC,OAAO,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAEtC,IAAIL,IAAI,CAACM,YAAY,CAAC,CAAC,KAAKJ,KAAK,CAACI,YAAY,CAAC,CAAC,EAAE,OAAO,OAAO;EAChE,IAAIN,IAAI,CAACM,YAAY,CAAC,CAAC,KAAKH,SAAS,CAACG,YAAY,CAAC,CAAC,EAAE,OAAO,WAAW;EACxE,OAAON,IAAI,CAACO,kBAAkB,CAACC,SAAS,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE,SAAS;IAAEC,OAAO,EAAE;EAAO,CAAC,CAAC;AACjH;AAEA,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACgC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMyC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMxC,KAAK,CAACyC,GAAG,CAAC,kCAAkC,EAAE;UAC9DC,eAAe,EAAE,IAAI,CAAE;QACzB,CAAC,CAAC;QAEFd,UAAU,CAACY,GAAG,CAACG,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QAAA,IAAAC,eAAA;QACd,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;UAClCC,OAAO,CAACC,IAAI,CAAC,qCAAqC,CAAC;UACnDC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;QAC5B,CAAC,MAAM;UAAA,IAAAC,gBAAA;UACLL,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAE,EAAAS,gBAAA,GAAAT,KAAK,CAACE,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAIC,KAAK,CAACU,OAAO,CAAC;QAC/E;MACF;IACF,CAAC;IAEDf,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,YAAY,GAAIC,EAAE,IAAK;IAC3B1B,mBAAmB,CAACD,gBAAgB,KAAK2B,EAAE,GAAG,IAAI,GAAGA,EAAE,CAAC;IACxDpB,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMqB,WAAW,GAAIC,IAAI,IAAK;IAC5B,MAAMC,IAAI,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACtD,IAAI,CAAC,CAAC;IACtC,OAAOqD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAChF,CAAC;EACD,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,EAAE,EAAEC,OAAO,KAAK;IACjD,IAAI;MACF,MAAMrE,KAAK,CAACsE,IAAI,CAAC,iCAAiC,EAAE;QAClDH,QAAQ;QACRC,EAAE;QACFC,OAAO;QACPf,OAAO,EAAE7B;MACX,CAAC,EAAE;QAAEiB,eAAe,EAAE;MAAK,CAAC,CAAC;MAE7B6B,KAAK,CAAC,eAAe,CAAC;MACtB7C,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAO8C,GAAG,EAAE;MACZxB,OAAO,CAACJ,KAAK,CAAC,iBAAiB,EAAE4B,GAAG,CAAC;MACrCD,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,MAAME,eAAe,GAAG9C,OAAO,CAC5B+C,MAAM,CAAEC,MAAM;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IAAA,OACb,EAAAD,eAAA,GAAAD,MAAM,CAACN,OAAO,cAAAO,eAAA,uBAAdA,eAAA,CAAgBE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChD,MAAM,CAAC+C,WAAW,CAAC,CAAC,CAAC,OAAAD,gBAAA,GAC5DF,MAAM,CAACK,QAAQ,cAAAH,gBAAA,uBAAfA,gBAAA,CAAiBI,IAAI,CAACC,GAAG;MAAA,IAAAC,SAAA,EAAAC,SAAA;MAAA,OACvB,EAAAD,SAAA,GAAAD,GAAG,CAACxB,IAAI,cAAAyB,SAAA,uBAARA,SAAA,CAAUL,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChD,MAAM,CAAC+C,WAAW,CAAC,CAAC,CAAC,OAAAM,SAAA,GACtDF,GAAG,CAACG,IAAI,cAAAD,SAAA,uBAARA,SAAA,CAAUN,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChD,MAAM,CAAC+C,WAAW,CAAC,CAAC,CAAC;IAAA,CACxD,CAAC;EAAA,CACH,CAAC,CACAd,KAAK,CAAC,CAAC,EAAE/B,YAAY,CAAC;EAEzB,oBACE/B,OAAA;IAAKoF,SAAS,EAAC,YAAY;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBACtFxF,OAAA;MACEyF,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oCAA0B;MACtCC,KAAK,EAAE9D,MAAO;MACd+D,QAAQ,EAAGC,CAAC,IAAK/D,SAAS,CAAC+D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CN,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAES,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE,MAAM;QAAEC,YAAY,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAiB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChH,CAAC,EAED/B,eAAe,CAACgC,MAAM,GAAG,CAAC,GACzBhC,eAAe,CAACZ,GAAG,CAAEc,MAAM,IAAK;MAC9B,MAAM+B,QAAQ,GAAG7E,gBAAgB,KAAK8C,MAAM,CAACnB,EAAE;MAC/C,MAAMmD,YAAY,GAAGhC,MAAM,CAACK,QAAQ,CAACN,MAAM,CAACQ,GAAG,IAC7CA,GAAG,CAACxB,IAAI,CAACoB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC5C,YAAY,CAAC2C,WAAW,CAAC,CAAC,CAAC,IAC3DI,GAAG,CAACG,IAAI,CAACP,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC5C,YAAY,CAAC2C,WAAW,CAAC,CAAC,CAC5D,CAAC;MAED,IAAI8B,aAAa,GAAG,EAAE;MAEtB,oBACE1G,OAAA;QAEEoF,SAAS,EAAE,gBAAgBoB,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;QACxDnB,KAAK,EAAE;UACLa,MAAM,EAAE,gBAAgB;UACxBD,YAAY,EAAE,MAAM;UACpBX,OAAO,EAAE,MAAM;UACfU,YAAY,EAAE,MAAM;UACpBW,eAAe,EAAE,SAAS;UAC1BC,SAAS,EAAE;QACb,CAAE;QAAApB,QAAA,gBAEFxF,OAAA;UAAIqF,KAAK,EAAE;YAAEwB,MAAM,EAAE,SAAS;YAAEC,KAAK,EAAE;UAAO,CAAE;UAACC,OAAO,EAAEA,CAAA,KAAM1D,YAAY,CAACoB,MAAM,CAACnB,EAAE,CAAE;UAAAkC,QAAA,GAAC,eACpF,EAACf,MAAM,CAACN,OAAO,IAAI,cAAc;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,EAEJE,QAAQ,iBACPxG,OAAA;UAAKqF,KAAK,EAAE;YAAE2B,SAAS,EAAE;UAAO,CAAE;UAAAxB,QAAA,gBAChCxF,OAAA;YACEyF,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,0BAA0B;YACtCC,KAAK,EAAE1D,YAAa;YACpB2D,QAAQ,EAAGC,CAAC,IAAK3D,eAAe,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACjDN,KAAK,EAAE;cAAEC,OAAO,EAAE,KAAK;cAAES,KAAK,EAAE,MAAM;cAAEC,YAAY,EAAE,MAAM;cAAEC,YAAY,EAAE,KAAK;cAAEC,MAAM,EAAE;YAAiB;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/G,CAAC,eAEFtG,OAAA;YAAKqF,KAAK,EAAE;cAAE4B,SAAS,EAAE,OAAO;cAAEC,SAAS,EAAE,MAAM;cAAEC,YAAY,EAAE;YAAO,CAAE;YAAA3B,QAAA,EACzEiB,YAAY,CAAC9C,GAAG,CAAC,CAACqB,GAAG,EAAEoC,CAAC,KAAK;cAC5B,MAAMC,SAAS,GAAGhH,YAAY,CAAC2E,GAAG,CAACzE,IAAI,CAAC;cACxC,MAAM+G,aAAa,GAAGD,SAAS,KAAKX,aAAa;cACjDA,aAAa,GAAGW,SAAS;cAEzB,MAAME,IAAI,GAAGvC,GAAG,CAACxB,IAAI,CAACqB,QAAQ,CAAC1C,SAAS,CAAC,CAAC,CAAC;;cAE3C,oBACEnC,OAAA;gBAAaqF,KAAK,EAAE;kBAAEmC,OAAO,EAAE,MAAM;kBAAEC,aAAa,EAAE;gBAAS,CAAE;gBAAAjC,QAAA,GAC9D8B,aAAa,iBACZtH,OAAA;kBAAKqF,KAAK,EAAE;oBACVqC,SAAS,EAAE,QAAQ;oBACnBC,MAAM,EAAE,YAAY;oBACpBb,KAAK,EAAE,MAAM;oBACbc,QAAQ,EAAE,QAAQ;oBAClBC,UAAU,EAAE;kBACd,CAAE;kBAAArC,QAAA,GAAC,eACE,EAAC6B,SAAS,EAAC,eAChB;gBAAA;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CACN,eACDtG,OAAA;kBACEoF,SAAS,EAAC,SAAS;kBACnBC,KAAK,EAAE;oBACLmC,OAAO,EAAE,MAAM;oBACfM,SAAS,EAAEP,IAAI,GAAG,UAAU,GAAG,YAAY;oBAC3CQ,QAAQ,EAAE,KAAK;oBACfpB,eAAe,EAAEY,IAAI,GAAG,SAAS,GAAG,MAAM;oBAC1CjC,OAAO,EAAE,MAAM;oBACfW,YAAY,EAAE,MAAM;oBACpB0B,MAAM,EAAE,OAAO;oBACfzB,MAAM,EAAEqB,IAAI,GAAG,mBAAmB,GAAG,gBAAgB;oBACrDX,SAAS,EAAE;kBACb,CAAE;kBAAApB,QAAA,gBAEFxF,OAAA;oBACEoF,SAAS,EAAC,QAAQ;oBAClBC,KAAK,EAAE;sBACLsB,eAAe,EAAE,MAAM;sBACvBG,KAAK,EAAE,MAAM;sBACbb,YAAY,EAAE,KAAK;sBACnBF,KAAK,EAAE,MAAM;sBACbiC,MAAM,EAAE,MAAM;sBACdR,OAAO,EAAE,MAAM;sBACfS,UAAU,EAAE,QAAQ;sBACpBC,cAAc,EAAE,QAAQ;sBACxBL,UAAU,EAAE,MAAM;sBAClBD,QAAQ,EAAE,OAAO;sBACjBO,WAAW,EAAE;oBACf,CAAE;oBAAA3C,QAAA,EAEDjC,WAAW,CAACyB,GAAG,CAACxB,IAAI;kBAAC;oBAAA2C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC,eACNtG,OAAA;oBAAKqF,KAAK,EAAE;sBAAE+C,IAAI,EAAE;oBAAE,CAAE;oBAAA5C,QAAA,gBACtBxF,OAAA;sBAAKqF,KAAK,EAAE;wBAAEwC,UAAU,EAAE;sBAAO,CAAE;sBAAArC,QAAA,EAAER,GAAG,CAACxB;oBAAI;sBAAA2C,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eACpDtG,OAAA;sBACEoF,SAAS,EAAC,YAAY;sBACtBC,KAAK,EAAE;wBAAE2B,SAAS,EAAE,KAAK;wBAAEhB,YAAY,EAAE;sBAAM,CAAE;sBACjDqC,uBAAuB,EAAE;wBAAEC,MAAM,EAAErI,SAAS,CAAC+E,GAAG,CAACG,IAAI;sBAAE;oBAAE;sBAAAgB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC1D,CAAC,eACFtG,OAAA;sBAAKqF,KAAK,EAAE;wBAAEuC,QAAQ,EAAE,OAAO;wBAAEd,KAAK,EAAE;sBAAO,CAAE;sBAAAtB,QAAA,EAC9C,IAAIhF,IAAI,CAACwE,GAAG,CAACzE,IAAI,CAAC,CAACgI,cAAc,CAAC;oBAAC;sBAAApC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjC,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC;cAAA,GAvDEc,CAAC;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAwDN,CAAC;YAEV,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGNtG,OAAA;YAAKqF,KAAK,EAAE;cAAE2B,SAAS,EAAE;YAAO,CAAE;YAAAxB,QAAA,gBAClCxF,OAAA;cACM2F,KAAK,EAAEpE,SAAU;cACjBqE,QAAQ,EAAGC,CAAC,IAAKrE,YAAY,CAACqE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC9CD,WAAW,EAAC,oBAAoB;cAChC8C,IAAI,EAAE,CAAE;cACRnD,KAAK,EAAE;gBAAEU,KAAK,EAAE,MAAM;gBAAET,OAAO,EAAE,KAAK;gBAAEW,YAAY,EAAE,KAAK;gBAAEC,MAAM,EAAE;cAAiB;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzF,CAAC,eACFtG,OAAA;cACE+G,OAAO,EAAEA,CAAA,KAAM/C,SAAS,CAACS,MAAM,CAACnB,EAAE,EAAEmB,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACtB,IAAI,EAAEiB,MAAM,CAACN,OAAO,CAAE;cAC7EkB,KAAK,EAAE;gBACL2B,SAAS,EAAE,KAAK;gBAChB1B,OAAO,EAAE,UAAU;gBACnBqB,eAAe,EAAE,SAAS;gBAC1BG,KAAK,EAAE,MAAM;gBACbZ,MAAM,EAAE,MAAM;gBACdD,YAAY,EAAE,KAAK;gBACnBY,MAAM,EAAE;cACV,CAAE;cAAArB,QAAA,EACH;YAED;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA,GAzHI7B,MAAM,CAACnB,EAAE;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0HX,CAAC;IAEV,CAAC,CAAC,gBAEFtG,OAAA;MAAAwF,QAAA,EAAG;IAAoB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B,EAEAvE,YAAY,GAAGN,OAAO,CAAC8E,MAAM,iBAC5BvG,OAAA;MACE+G,OAAO,EAAEA,CAAA,KAAM/E,eAAe,CAACyG,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;MACjDpD,KAAK,EAAE;QACL2B,SAAS,EAAE,MAAM;QACjB1B,OAAO,EAAE,WAAW;QACpBW,YAAY,EAAE,KAAK;QACnBU,eAAe,EAAE,SAAS;QAC1BG,KAAK,EAAE,MAAM;QACbZ,MAAM,EAAE,MAAM;QACdW,MAAM,EAAE;MACV,CAAE;MAAArB,QAAA,EACH;IAED;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChF,EAAA,CA3OuBF,SAAS;AAAAsH,EAAA,GAATtH,SAAS;AAAA,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}